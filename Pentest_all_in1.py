import os
import sys
import time

# --- Warna untuk Output (Opsional, untuk tampilan lebih menarik) ---
class Colors:
    HEADER = '\033[95m'
    OKBLUE = '\033[94m'
    OKGREEN = '\033[92m'
    WARNING = '\033[93m'
    FAIL = '\033[91m'
    ENDC = '\033[0m'
    BOLD = '\033[1m'
    UNDERLINE = '\033[4m'

# --- Fungsi-fungsi Utama ---

def display_banner():
    """⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⠀⠀⠀⣀⠀⢻⣷⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠋⠀⠀⠀⠀⠀⠀⣹⣿⣿⣿⣿⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠃⠀⠀⠀⠀⠀⠀⠀⣠⣿⣿⣿⣿⣿⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡏⠀⠀⠀⣀⣤⣴⡶⢾⣿⣿⣿⣿⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡾⠀⠀⠀⠀⠀⠀⠀⠀⠠⠤⢬⣭⣭⣽⣿⣿⣿⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣷⢟⣁⡤⠴⠒⠚⠉⠉⠁⠀⠀⠀⠈⠙⠿⣿⣿⣿⡁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣶⠟⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⢿⣿⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢿⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣼⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣤⢶⣶⣿⣷⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣿⣿⣷⣶⣦⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⠟⠋⠈⠛⢟⠻⣿⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⠿⠛⢉⡽⠿⠿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⡇⠀⠀⠀⠀⠈⠀⠈⠙⠧⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠞⠁⠀⠀⠀⠀⠀⢰⡟⠘⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⠟⠛⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠞⠀⠀⠘⢿⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⣠⣾⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣿⢇⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⣠⢾⡏⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⡀⠀⠀⠀⠙⣿⠟⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⢠⣿⡌⠻⠄⠀⠀⠀⠀⠀⣿⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠋⠉⠉⠉⠉⠉⢹⡇⠀⠀⠀⠈⠀⠀⢿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⣠⣆⡾⢛⠛⠂⠀⠀⠀⠀⠀⠀⢿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠇⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⠀⠀⠀⠀⠀⠀⠀
⠀⢀⣾⣿⣿⣿⠿⠷⠄⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠚⠋⣸⣿⢀⠀⠀⠀⠀⠀⠀
⢀⠿⠛⠋⠉⠉⠩⠿⠷⠒⣦⣤⣄⡀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⣄⠀⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⢀⣀⣰⣾⡿⠿⠿⠷⢦⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠐⠉⠁⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢏⣹⣈⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠀⠀⠒⠒⠛⠛⠿⠿⣍⠛⠦⠀⠀⠀⠁⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠉⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀"""
    os.system('clear') # Bersihkan layar Termux
    print(Colors.HEADER + Colors.BOLD + """
  

    Versi: 1.0 | Multifungsi Pentest Tool
    Oleh: [Wyse16-XCode]
    """ + Colors.ENDC)
    print(Colors.OKBLUE + "---------------------------------------------------" + Colors.ENDC)
    print(Colors.OKGREEN + "Selamat datang di Tool Pentest Multifungsi!" + Colors.ENDC)
    print(Colors.OKBLUE + "---------------------------------------------------" + Colors.ENDC)
    time.sleep(1)

def show_menu():
    """Menampilkan menu pilihan tool."""
    print("\n" + Colors.BOLD + "Pilih kategori Tool:" + Colors.ENDC)
    print("1. " + Colors.OKBLUE + "Informasi Target (OSINT)" + Colors.ENDC)
    print("2. " + Colors.OKBLUE + "Scanning & Enumerasi (Nmap)" + Colors.ENDC)
    print("3. " + Colors.OKBLUE + "Bruteforce Attack" + Colors.ENDC)
    print("4. " + Colors.OKBLUE + "SQL Injection" + Colors.ENDC)
    print("5. " + Colors.OKBLUE + "Exploitasi (Coming Soon/Integrasi)" + Colors.ENDC)
    print("0. " + Colors.FAIL + "Keluar" + Colors.ENDC)
    print(Colors.OKBLUE + "---------------------------------------------------" + Colors.ENDC)

def run_osint_tools():
    """Fungsi untuk menu OSINT."""
    while True:
        os.system('clear')
        print(Colors.HEADER + Colors.BOLD + "--- OSINT Tools ---" + Colors.ENDC)
        print("1. " + Colors.OKGREEN + "Whois Lookup" + Colors.ENDC)
        print("2. " + Colors.OKGREEN + "DNS Lookup" + Colors.ENDC)
        print("3. " + Colors.OKGREEN + "Pencarian Informasi Email/User (Integrasi)" + Colors.ENDC)
        print("0. " + Colors.WARNING + "Kembali ke Menu Utama" + Colors.ENDC)
        osint_choice = input(Colors.OKBLUE + "Pilih opsi OSINT: " + Colors.ENDC)

        if osint_choice == '1':
            target = input(Colors.OKGREEN + "Masukkan domain (contoh: example.com): " + Colors.ENDC)
            print(Colors.OKBLUE + f"\nMencari informasi Whois untuk {target}..." + Colors.ENDC)
            os.system(f"whois {target}") # Membutuhkan paket whois (pkg install whois)
            input(Colors.BOLD + "Tekan Enter untuk melanjutkan..." + Colors.ENDC)
        elif osint_choice == '2':
            target = input(Colors.OKGREEN + "Masukkan domain (contoh: example.com): " + Colors.ENDC)
            print(Colors.OKBLUE + f"\nMencari informasi DNS untuk {target}..." + Colors.ENDC)
            os.system(f"nslookup {target}") # nslookup sudah ada secara default
            input(Colors.BOLD + "Tekan Enter untuk melanjutkan..." + Colors.ENDC)
        elif osint_choice == '3':
            print(Colors.WARNING + "Fungsi ini memerlukan integrasi dengan API atau tool eksternal (contoh: theHarvester, Sherlock)." + Colors.ENDC)
            print(Colors.WARNING + "Anda bisa menambahkan kode untuk memanggil tool tersebut di sini." + Colors.ENDC)
            input(Colors.BOLD + "Tekan Enter untuk melanjutkan..." + Colors.ENDC)
        elif osint_choice == '0':
            break
        else:
            print(Colors.FAIL + "Pilihan tidak valid. Silakan coba lagi." + Colors.ENDC)
        time.sleep(1)

def run_nmap_scan():
    """Fungsi untuk Nmap."""
    while True:
        os.system('clear')
        print(Colors.HEADER + Colors.BOLD + "--- Nmap Scan ---" + Colors.ENDC)
        print("1. " + Colors.OKGREEN + "Basic Port Scan (-sV)" + Colors.ENDC)
        print("2. " + Colors.OKGREEN + "OS Detection (-O)" + Colors.ENDC)
        print("3. " + Colors.OKGREEN + "Full Scan (-A)" + Colors.ENDC)
        print("0. " + Colors.WARNING + "Kembali ke Menu Utama" + Colors.ENDC)
        nmap_choice = input(Colors.OKBLUE + "Pilih opsi Nmap: " + Colors.ENDC)

        target_ip = input(Colors.OKGREEN + "Masukkan IP target (contoh: 192.168.1.1 atau scanme.nmap.org): " + Colors.ENDC)

        if nmap_choice == '1':
            print(Colors.OKBLUE + f"\nMenjalankan Nmap Basic Port Scan (-sV) pada {target_ip}..." + Colors.ENDC)
            os.system(f"nmap -sV {target_ip}")
            input(Colors.BOLD + "Tekan Enter untuk melanjutkan..." + Colors.ENDC)
        elif nmap_choice == '2':
            print(Colors.OKBLUE + f"\nMenjalankan Nmap OS Detection (-O) pada {target_ip}..." + Colors.ENDC)
            os.system(f"nmap -O {target_ip}")
            input(Colors.BOLD + "Tekan Enter untuk melanjutkan..." + Colors.ENDC)
        elif nmap_choice == '3':
            print(Colors.OKBLUE + f"\nMenjalankan Nmap Full Scan (-A) pada {target_ip}..." + Colors.ENDC)
            os.system(f"nmap -A {target_ip}")
            input(Colors.BOLD + "Tekan Enter untuk melanjutkan..." + Colors.ENDC)
        elif nmap_choice == '0':
            break
        else:
            print(Colors.FAIL + "Pilihan tidak valid. Silakan coba lagi." + Colors.ENDC)
        time.sleep(1)

def run_bruteforce_attack():
    """Fungsi untuk Bruteforce."""
    while True:
        os.system('clear')
        print(Colors.HEADER + Colors.BOLD + "--- Bruteforce Attack ---" + Colors.ENDC)
        print(Colors.WARNING + "Modul bruteforce memerlukan implementasi spesifik (SSH, FTP, Web Login, dll.)." + Colors.ENDC)
        print(Colors.WARNING + "Anda bisa mengintegrasikan tool seperti Hydra atau menulis fungsi Anda sendiri." + Colors.ENDC)
        print("1. " + Colors.OKGREEN + "Bruteforce SSH (Integrasi Hydra)" + Colors.ENDC)
        print("2. " + Colors.OKGREEN + "Bruteforce Web Login (Coming Soon)" + Colors.ENDC)
        print("0. " + Colors.WARNING + "Kembali ke Menu Utama" + Colors.ENDC)
        bf_choice = input(Colors.OKBLUE + "Pilih opsi Bruteforce: " + Colors.ENDC)

        if bf_choice == '1':
            # Contoh integrasi Hydra (Anda perlu menginstal hydra: pkg install hydra)
            target_ip = input(Colors.OKGREEN + "Masukkan IP target SSH: " + Colors.ENDC)
            username_file = input(Colors.OKGREEN + "Masukkan path file username (contoh: users.txt): " + Colors.ENDC)
            password_file = input(Colors.OKGREEN + "Masukkan path file password (contoh: pass.txt): " + Colors.ENDC)
            print(Colors.OKBLUE + f"\nMenjalankan Hydra SSH bruteforce pada {target_ip}..." + Colors.ENDC)
            os.system(f"hydra -L {username_file} -P {password_file} ssh://{target_ip}")
            input(Colors.BOLD + "Tekan Enter untuk melanjutkan..." + Colors.ENDC)
        elif bf_choice == '2':
            print(Colors.WARNING + "Fungsi ini membutuhkan pengembangan lebih lanjut untuk menangani formulir login web." + Colors.ENDC)
            input(Colors.BOLD + "Tekan Enter untuk melanjutkan..." + Colors.ENDC)
        elif bf_choice == '0':
            break
        else:
            print(Colors.FAIL + "Pilihan tidak valid. Silakan coba lagi." + Colors.ENDC)
        time.sleep(1)

def run_sql_injection():
    """Fungsi untuk SQL Injection."""
    while True:
        os.system('clear')
        print(Colors.HEADER + Colors.BOLD + "--- SQL Injection ---" + Colors.ENDC)
        print(Colors.WARNING + "Modul SQL Injection seringkali membutuhkan tool eksternal seperti SQLMap." + Colors.ENDC)
        print("1. " + Colors.OKGREEN + "Jalankan SQLMap (Integrasi)" + Colors.ENDC)
        print("0. " + Colors.WARNING + "Kembali ke Menu Utama" + Colors.ENDC)
        sql_choice = input(Colors.OKBLUE + "Pilih opsi SQL Injection: " + Colors.ENDC)

        if sql_choice == '1':
            # Contoh integrasi SQLMap (Anda perlu menginstal sqlmap: git clone https://github.com/sqlmapproject/sqlmap.git)
            target_url = input(Colors.OKGREEN + "Masukkan URL target (contoh: http://example.com/vuln.php?id=1): " + Colors.ENDC)
            print(Colors.OKBLUE + f"\nMenjalankan SQLMap pada {target_url}..." + Colors.ENDC)
            # Pastikan Anda berada di direktori sqlmap atau tambahkan path ke PATH lingkungan Anda
            os.system(f"python3 sqlmap/sqlmap.py -u '{target_url}' --dbs --batch") # Contoh dasar
            input(Colors.BOLD + "Tekan Enter untuk melanjutkan..." + Colors.ENDC)
        elif sql_choice == '0':
            break
        else:
            print(Colors.FAIL + "Pilihan tidak valid. Silakan coba lagi." + Colors.ENDC)
        time.sleep(1)

def run_exploitation_tools():
    """Fungsi untuk Eksploitasi (Placeholder)."""
    os.system('clear')
    print(Colors.HEADER + Colors.BOLD + "--- Exploitation Tools ---" + Colors.ENDC)
    print(Colors.WARNING + "Bagian eksploitasi sangat bervariasi dan kompleks." + Colors.ENDC)
    print(Colors.WARNING + "Anda bisa mengintegrasikan Metasploit Framework (jika terinstal) atau tool eksploitasi spesifik lainnya di sini." + Colors.ENDC)
    print(Colors.WARNING + "Ini akan memerlukan pengetahuan mendalam tentang kerentanan dan cara mengeksploitasinya." + Colors.ENDC)
    input(Colors.BOLD + "Tekan Enter untuk kembali ke menu utama..." + Colors.ENDC)

# --- Main Program ---
def main():
    display_banner()
    while True:
        show_menu()
        choice = input(Colors.OKGREEN + "Masukkan pilihan Anda: " + Colors.ENDC)

        if choice == '1':
            run_osint_tools()
        elif choice == '2':
            run_nmap_scan()
        elif choice == '3':
            run_bruteforce_attack()
        elif choice == '4':
            run_sql_injection()
        elif choice == '5':
            run_exploitation_tools()
        elif choice == '0':
            print(Colors.OKBLUE + "Terima kasih telah menggunakan tool ini. Sampai jumpa!" + Colors.ENDC)
            sys.exit()
        else:
            print(Colors.FAIL + "Pilihan tidak valid. Silakan coba lagi." + Colors.ENDC)
        time.sleep(1)

if __name__ == "__main__":
    main()
